name: CI

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:

  build:
    uses: DaemonSharps/CI-CD/.github/workflows/build.yml@stable
      
  update_draft_release:
    name: Обновление черновика релиза
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.release-drafter.outputs.tag_name }}
    steps:

      - id: release-drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload_on_hub:
    needs:
     - build
     - update_draft_release
    uses: DaemonSharps/CI-CD/.github/workflows/docker-deploy.yml@stable
    with:
      version_tags: |
        daemonsharps/jwt-auth-api:dev-${{ github.run_number }}.${{ github.run_id }}.${{ github.run_attempt }}
        daemonsharps/jwt-auth-api:dev-latest
        daemonsharps/jwt-auth-api:${{ needs.update_draft_release.outputs.release_tag }}
        daemonsharps/jwt-auth-api:latest
    secrets:
      DOCKER_LOGIN: ${{ secrets.DOCKER_USER_LOGIN }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_USER_AUTH_TOKEN }}

  deploy_on_compose:
    name: Проливка на VPS
    needs:
      - upload_on_hub
      - update_draft_release
    strategy:
      matrix:
        enviroment_name: [ development, production ]
        include:
          - enviroment_name: development
            image_tag: dev-${{ github.run_number }}.${{ github.run_id }}.${{ github.run_attempt }}
            image_port: 3000
          - enviroment_name: production
            image_tag: ${{ needs.update_draft_release.outputs.release_tag }}
            image_port: 3001
    uses: DaemonSharps/CI-CD/.github/workflows/docker-release.yml@stable
    with:
      compose_folder: GarageSite
      env_file_name: JWTProvider/api.env
      compose_service_name: jwt-api
      image_tag_env: JWT_TAG=${{ matrix.image_tag }}
      image_port_env: JWT_API_PORT=${{ matrix.image_port }}
      environment_name: ${{ matrix.enviroment_name }}
    secrets:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      ENV_TEXT: ${{ secrets[format('{0}_ENV_TEXT', matrix.enviroment_name)] }}
